ch1_1
* 언어 활용 시 기억해야하는 내용
 - 변수 선언하기
 - 함수 정의하기
 - 컨테이너 자료형 다루기
 - 조건문, 반복문 사용하기
* 문제 분석하기
 1. 동작 단위로 쪼개서 분석하기
 2. 제약 사항을 정리하고 테스트 케이스 추가하기
 3. 입력의 크기 분석하기(시간 복잡도에 영향)
 4. 핵심 키워드 파악하기(알고리즘 선택에 유리)
  * 스택
   - 키워드 : 쌍이 맞는지, 최근
   - 상황 : 무언가를 저장하고 반대로 처리할 때, 데이터의 조합이 균형을 이뤄야할 때, 알고리즘이 재귀 특성을 가질 때, 최근 상태 추적
  * 큐
   - 키워드 : 순서대로, ~대로 동작하는 경우, 스케줄링, 최소 시간
   - 상황 : 특정 조건에 따라 시뮬레이션할 때, 시작 지점부터 목표 지점까지 최단 거리
  * 깊이 우선 탐색
   - 키워드 : 모든 경로
   - 상황 : 메모리 사용량이 제한적일 때의 탐색, 백트레킹 문제를 풀 때
  * 너비 우선 탐색
   - 키워드 : 최적, 레벨 순회, 최소 단계, 네트워크 전파
   - 상황 : 시작 지점부터 최단 경로나 최소 횟수를 찾아야할 때
  * 백트래킹
   - 키워드 : 조합, 순열, 부분 집합
   - 상황 : 조합 및 순열 문제, 특정 조건을 만족하는 부분 집합
  * 최단 경로
   - 키워드 : 최단 경로, 최소 시간, 최소 비용, 트래픽, 음의 순환, 단일 출발점 경로
   - 상황 : 다익스트라(특정 지점에서 나머지 지점까지 가는 최단 경로), 벨만-포드(음의 순환 탐지, 음의 가중치를 가진 그래프에서 최단 경로)
 5. 데이터의 구성과 흐름 파악하기 (혀율성, 접근성)
  - 힙(heap) 자료구조 : 데이터의 삽입과 삭제가 빈번하게 일어날 때 사용
  - 최적화된 해결책이 떠오르지 않음 : 전체 탐색 방식, 하드 코딩 방식
  - 접근성 : 전화번호(key, value)
